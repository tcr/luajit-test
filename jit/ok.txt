IMM mov 
--> 1 r0 
--> 2 #LUA_YIELD 
--> op mov 
IMM cmp 
--> 1 r0 
--> 2 #FRAME_C 
--> op cmp 
IMMLOAD str 
--> 1 r3 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMM add 
--> 1 r7 
--> 2 r7 
--> 3 #GG_G2DISP 
--> op add 
IMMLOAD str 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMM mov 
--> 1 r1 
--> 2 #LUA_MINSTACK 
--> op mov 
IMM add 
--> 1 r7 
--> 2 r7 
--> 3 #GG_G2DISP 
--> op add 
IMM mov 
--> 1 r6 
--> 2 #FRAME_CP 
--> op mov 
IMM add 
--> 1 r1 
--> 2 r13 
--> 3 #CFRAME_RESUME 
--> op add 
IMMLOAD str 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMM mov 
--> 1 r6 
--> 2 #FRAME_CP 
--> op mov 
IMM mov 
--> 1 r6 
--> 2 #FRAME_C 
--> op mov 
IMM add 
--> 1 r7 
--> 2 r7 
--> 3 #GG_G2DISP 
--> op add 
IMMLOAD str 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMM mov 
--> 1 r6 
--> 2 #FRAME_CP 
--> op mov 
IMM add 
--> 1 r7 
--> 2 r7 
--> 3 #GG_G2DISP 
--> op add 
IMMLOAD ldr 
--> 1 r5 
--> 2 [r2, #PC2PROTO(k)] 
--> op ldr 
IMM sub 
--> 1 r1 
--> 2 r7 
--> 3 #-DISPATCH_GL(tmptv) 
--> op sub 
IMM sub 
--> 1 r1 
--> 2 r7 
--> 3 #-DISPATCH_GL(tmptv) 
--> op sub 
IMM add 
--> 1 r6 
--> 2 r1 
--> 3 #FRAME_CONT 
--> op add 
IMMLOAD ldr 
--> 1 STR:r11 
--> 2 [r7, #DISPATCH_GL(gcroot[GCROOT_MMNAME+MM_metatable])] 
--> op ldr 
IMM movlo 
--> 1 r1 
--> 2 #~LJ_TISNUM 
--> op movlo 
IMMLOAD ldr 
--> 1 TAB:r12 
--> 2 [r3, #DISPATCH_GL(gcroot[GCROOT_BASEMT])] 
--> op ldr 
IMMLOAD ldr 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op ldr 
IMMLOAD str 
--> 1 TAB:r0 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op str 
IMMLOAD ldr 
--> 1 r3 
--> 2 [r7, #DISPATCH_GL(gcroot[GCROOT_BASEMT_NUM])] 
--> op ldr 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMM mov 
--> 1 r11 
--> 2 #(2+1)*8 
--> op mov 
IMM mov 
--> 1 r11 
--> 2 #(3+1)*8 
--> op mov 
IMM mov 
--> 1 r11 
--> 2 #(0+1)*8 
--> op mov 
IMM movne 
--> 1 r11 
--> 2 #(2+1)*8 
--> op movne 
IMM mov 
--> 1 r11 
--> 2 #(3+1)*8 
--> op mov 
IMMLOAD ldrb 
--> 1 r10 
--> 2 [r7, #DISPATCH_GL(hookmask)] 
--> op ldrb 
IMM moveq 
--> 1 r6 
--> 2 #8+FRAME_PCALL 
--> op moveq 
IMM movne 
--> 1 r6 
--> 2 #8+FRAME_PCALLH 
--> op movne 
IMMLOAD ldrb 
--> 1 r10 
--> 2 [r7, #DISPATCH_GL(hookmask)] 
--> op ldrb 
IMM moveq 
--> 1 r6 
--> 2 #16+FRAME_PCALL 
--> op moveq 
IMM movne 
--> 1 r6 
--> 2 #16+FRAME_PCALLH 
--> op movne 
IMM cmp 
--> 1 r10 
--> 2 #LUA_YIELD 
--> op cmp 
IMMLOAD str 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMM cmp 
--> 1 r0 
--> 2 #LUA_YIELD 
--> op cmp 
IMM mov 
--> 1 r11 
--> 2 #(2+1)*8 
--> op mov 
IMM cmp 
--> 1 r10 
--> 2 #LUA_YIELD 
--> op cmp 
IMMLOAD str 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMM cmp 
--> 1 r0 
--> 2 #LUA_YIELD 
--> op cmp 
IMM mov 
--> 1 r0 
--> 2 #LUA_YIELD 
--> op mov 
IMM mov 
--> 1 r11 
--> 2 #(1+1)*8 
--> op mov 
IMM mov 
--> 1 r11 
--> 2 #(2+1)*8 
--> op mov 
IMM mov 
--> 1 r11 
--> 2 #(2+1)*8 
--> op mov 
IMM moveq 
--> 1 r11 
--> 2 #(0+1)*8 
--> op moveq 
IMM movne 
--> 1 r11 
--> 2 #(1+1)*8 
--> op movne 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMM add 
--> 1 r0 
--> 2 STR:r0 
--> 3 #sizeof(GCstr)-1 
--> op add 
IMM sub 
--> 1 STR:r0 
--> 2 r7 
--> 3 #-DISPATCH_GL(strempty) 
--> op sub 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r12 
--> 2 [r7, #DISPATCH_GL(tmpbuf.sz)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(tmpbuf.buf)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r12 
--> 2 [r7, #DISPATCH_GL(tmpbuf.sz)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(tmpbuf.buf)] 
--> op ldr 
IMM add 
--> 1 r0 
--> 2 STR:r0 
--> 3 #sizeof(GCstr) 
--> op add 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r12 
--> 2 [r7, #DISPATCH_GL(tmpbuf.sz)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(tmpbuf.buf)] 
--> op ldr 
IMM add 
--> 1 r0 
--> 2 STR:r0 
--> 3 #sizeof(GCstr) 
--> op add 
IMMLOAD ldr 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r12 
--> 2 [r7, #DISPATCH_GL(tmpbuf.sz)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(tmpbuf.buf)] 
--> op ldr 
IMM add 
--> 1 r0 
--> 2 STR:r0 
--> 3 #sizeof(GCstr) 
--> op add 
IMM add 
--> 1 r0 
--> 2 r0 
--> 3 #8*LUA_MINSTACK 
--> op add 
IMM mov 
--> 1 r1 
--> 2 #LUA_MINSTACK 
--> op mov 
IMMLOAD ldrb 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(hookmask)] 
--> op ldrb 
IMMLOAD ldr 
--> 1 r15 
--> 2 [r12, #GG_DISP2STATIC] 
--> op ldr 
IMMLOAD ldrb 
--> 1 r0 
--> 2 [r7, #DISPATCH_GL(hookmask)] 
--> op ldrb 
IMMLOAD ldr 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(hookcount)] 
--> op ldr 
IMMLOAD str 
--> 1 r1 
--> 2 [r7, #DISPATCH_GL(hookcount)] 
--> op str 
IMMLOAD ldr 
--> 1 r12 
--> 2 [r12, #GG_DISP2STATIC] 
--> op ldr 
IMM mov 
--> 1 r3 
--> 2 #1-vk 
--> op mov 
IMM add 
--> 1 r11 
--> 2 r11 
--> 3 #offsetof(GCfuncL, uvptr) 
--> op add 
IMM add 
--> 1 r10 
--> 2 r10 
--> 3 #offsetof(GCfuncL, uvptr) 
--> op add 
IMM add 
--> 1 r12 
--> 2 r3 
--> 3 #-LJ_TISGCV 
--> op add 
IMM sub 
--> 1 r0 
--> 2 r7 
--> 3 #-GG_DISP2G 
--> op sub 
IMM add 
--> 1 r10 
--> 2 r10 
--> 3 #offsetof(GCfuncL, uvptr) 
--> op add 
IMM sub 
--> 1 r0 
--> 2 r7 
--> 3 #-GG_DISP2G 
--> op sub 
IMM add 
--> 1 r10 
--> 2 r10 
--> 3 #offsetof(GCfuncL, uvptr) 
--> op add 
IMM add 
--> 1 r10 
--> 2 r10 
--> 3 #offsetof(GCfuncL, uvptr) 
--> op add 
IMMLOAD ldr 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(gc.total)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r3 
--> 2 [r7, #DISPATCH_GL(gc.threshold)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op ldr 
IMMLOAD str 
--> 1 TAB:r0 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op str 
IMMLOAD ldr 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op ldr 
IMMLOAD str 
--> 1 TAB:r12 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op str 
IMMLOAD ldr 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op ldr 
IMMLOAD str 
--> 1 TAB:r0 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op str 
IMMLOAD ldr 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op ldr 
IMMLOAD str 
--> 1 TAB:r1 
--> 2 [r7, #DISPATCH_GL(gc.grayagain)] 
--> op str 
IMMLOAD ldr 
--> 1 r5 
--> 2 [r0, #PC2PROTO(k)] 
--> op ldr 
IMM cmpeq 
--> 1 r0 
--> 2 #FF_next_N 
--> op cmpeq 
IMM mov 
--> 1 r0 
--> 2 #BC_JMP 
--> op mov 
IMM mov 
--> 1 r12 
--> 2 #BC_ITERC 
--> op mov 
IMM add 
--> 1 r11 
--> 2 r11 
--> 3 #FRAME_VARG 
--> op add 
IMMLOAD ldr 
--> 1 r5 
--> 2 [r1, #PC2PROTO(k)] 
--> op ldr 
IMMLOAD ldr 
--> 1 r5 
--> 2 [r1, #PC2PROTO(k)] 
--> op ldr 
IMMLOAD ldrb 
--> 1 r1 
--> 2 [r6, #-4+PC2PROTO(numparams)] 
--> op ldrb 
IMMLOAD ldr 
--> 1 r5 
--> 2 [r6, #-4+PC2PROTO(k)] 
--> op ldr 
IMM add 
--> 1 r1 
--> 2 r11 
--> 3 #8+FRAME_VARG 
--> op add 
IMMLOAD ldr 
--> 1 r5 
--> 2 [r6, #-4+PC2PROTO(k)] 
--> op ldr 
IMMLOAD ldrb 
--> 1 r12 
--> 2 [r6, #-4+PC2PROTO(numparams)] 
--> op ldrb 
IMMLOAD ldr 
--> 1 r3 
--> 2 [r7, #DISPATCH_GL(wrapf)] 
--> op ldr 
IMMLOAD str 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
IMMLOAD str 
--> 1 r2 
--> 2 [r7, #DISPATCH_GL(vmstate)] 
--> op str 
